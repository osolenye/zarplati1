from django.contrib.auth.base_user import BaseUserManager, AbstractBaseUser
from django.db import models

# Модель Фирма
class Company(models.Model):
    name = models.CharField(max_length=255, verbose_name='Название компании')
    employee_count = models.IntegerField(verbose_name='Количество сотрудников')

    def __str__(self):
        return self.name

# Модель Сотрудник
class Employee(models.Model):
    first_name = models.CharField(max_length=100, verbose_name='Имя')
    last_name = models.CharField(max_length=100, verbose_name='Фамилия')
    patronymic = models.CharField(max_length=100, verbose_name='Отчество', blank=True)
    salary = models.FloatField(verbose_name='Зарплата')
    phone_number = models.CharField(max_length=20, verbose_name='Номер телефона')
    position = models.CharField(max_length=100, verbose_name='Должность')
    company = models.ForeignKey(Company, related_name='employees', on_delete=models.CASCADE, verbose_name='Компания')

    def __str__(self):
        return f"{self.first_name} {self.last_name}"


class AdminManager(BaseUserManager):
    def create_user(self, username, password=None, **extra_fields):
        if not username:
            raise ValueError('The Username field must be set')
        user = self.model(username=username, **extra_fields)
        user.set_password(password)  # Метод set_password для хеширования пароля
        user.save(using=self._db)
        return user

    def create_superuser(self, username, password=None, **extra_fields):
        extra_fields.setdefault('is_staff', True)
        extra_fields.setdefault('is_superuser', True)
        return self.create_user(username, password, **extra_fields)


class Admin(AbstractBaseUser):
    username = models.CharField(max_length=100, unique=True)
    email = models.EmailField(unique=True)
    is_active = models.BooleanField(default=True)
    is_staff = models.BooleanField(default=False)

    objects = AdminManager()

    USERNAME_FIELD = 'username'
    REQUIRED_FIELDS = ['email']

    def __str__(self):
        return self.username
